#define _CRT_SECURE_NO_WARNINGS 1

#include<stdio.h>
//统计二进制1的个数，传统方法
int sum_bide1_1(int num)
{
	int size=sizeof(num)*8;
	int i;
	int n=num;
	int count=0;
	for (i = 0; i < size; i++)
	{
		if (((n >> i) & 1) == 1)
			count++;
		n = num;
	}
	return count;
}

//高效经典的方法
int sum_bide1_2(int num)
{
	int count = 0;
	while (num)
	{
		num = num & (num - 1);//每次-1后并和原来的数相与会使得最右边的1丢弃
		count++;				//有几个1就执行几次运算，大大提高效率
	}
	return count;
}
//该方法的应用
//统计两个数二进制之间不同的位数
int cal_bide_diff(int a, int b)
{
	int c; 
	c = a ^ b;
	return sum_bide1_2(c);
}
int main()
{

	int a =-1;
	printf("%d ", sum_bide1_2(a));
	return 0;
}
